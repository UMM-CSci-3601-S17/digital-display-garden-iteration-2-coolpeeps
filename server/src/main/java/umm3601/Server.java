package umm3601;

import umm3601.flower.FlowerController;

import java.io.IOException;

import static spark.Spark.*;

import umm3601.flower.ExcelParser;


public class Server {
    public static void main(String[] args) throws IOException {

        // This users looks in the folder `public` for the static web artifacts,
        // which includes all the HTML, CSS, and JS files generated by the Angular
        // build. This `public` directory _must_ be somwhere in the classpath;
         //a problem which is resolved in `server/build.gradle`.
//        ExcelParser parser = new ExcelParser(false);
//        parser.parseExcel();
//
//        staticFiles.location("/public");

        FlowerController flowerController = new FlowerController("ddg");

        options("/*", (request, response) -> {

            String accessControlRequestHeaders = request.headers("Access-Control-Request-Headers");
            if (accessControlRequestHeaders != null) {
                response.header("Access-Control-Allow-Headers", accessControlRequestHeaders);
            }

            String accessControlRequestMethod = request.headers("Access-Control-Request-Method");
            if (accessControlRequestMethod != null) {
                response.header("Access-Control-Allow-Methods", accessControlRequestMethod);
            }
 
            return "OK";
        });

        before((request, response) -> response.header("Access-Control-Allow-Origin", "*"));

        // Simple example route
        get("/hello", (req, res) -> "Hello World");

        // Redirects for the "home" page
        redirect.get("", "/");
        redirect.get("/", "http://localhost:9000");


        // List beds
        get("api/beds", (req, res) -> {
            res.type("application/json");
            return flowerController.listBeds(req.queryMap().toMap());
        });

        // List flowers
        get("api/flowers", (req, res) -> {
            res.type("application/json");
            return flowerController.listFlowers(req.queryMap().toMap());
        });

        // Get a flower
        get("api/flowers/:id", (req, res) -> {
            res.type("application/json");
            String id = req.params("id");
            return flowerController.getFlower(id);
        });

        // Handle "404" file not found requests:
        notFound((req, res) -> {
            res.type("text");
            res.status(404);
            return "Sorry, we couldn't find that!";
        });

        post("api/plant/leaveComment", (req, res) -> {
            res.type("application/json");
            return FlowerController.storeFlowerComment(req.body());
        });

        post("api/plant/:id/like", (req, res) -> {
            res.type("application/json");
            String id = req.params("id");
            return flowerController.incrementMetadata(id, "likes");
        });

        post("api/plant/:id/dislike", (req, res) -> {
            res.type("application/json");
            String id = req.params("id");
            return flowerController.incrementMetadata(id, "dislikes");
        });
    }

}
